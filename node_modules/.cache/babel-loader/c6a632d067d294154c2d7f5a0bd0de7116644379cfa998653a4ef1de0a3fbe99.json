{"ast":null,"code":"import { vModelText as _vModelText, createElementVNode as _createElementVNode, withDirectives as _withDirectives, toDisplayString as _toDisplayString, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.firstName = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.firstName]]), _createElementVNode(\"div\", null, [_createElementVNode(\"h1\", null, \"full name : \" + _toDisplayString($options.fullName), 1 /* TEXT */), _createElementVNode(\"h1\", null, \"full name : \" + _toDisplayString($options.getFullName()), 1 /* TEXT */)])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createElementVNode","type","$data","firstName","$event","_toDisplayString","$options","fullName","getFullName"],"sources":["C:\\Users\\qjawn\\Desktop\\vue\\academy-study\\vue-hello\\src\\views\\functions\\MethodVSComputed2.vue"],"sourcesContent":["<template>\r\n  <input type=\"text\" v-model=\"firstName\" />\r\n  <div>\r\n    <h1>full name : {{ fullName }}</h1>\r\n    <h1>full name : {{ getFullName() }}</h1>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  /**\r\n   * 궁금점 method()를 부를때는 참조로 불러? computed는 캐시 메모리에서 어떻게 가져오는지?\r\n   */\r\n  data() {\r\n    return {\r\n      firstName : \"길동\",\r\n      lastName : \"홍\",\r\n    };\r\n  },\r\n  methods: {\r\n    getFullName() {\r\n      console.log(\"Method Function 호출\");\r\n      return this.firstName + this.lastName;\r\n    },\r\n  },\r\n\r\n  // 변화 감지 요인?\r\n  /**\r\n   * data() 안에 내부요소와 무관하게 캐시 메모리에 데이터를 key, value로 저장\r\n   * 그러면 함수에 사용된 data()요소[firstName, lastName]의 데이터를 참조하고있나? 참조된것이 호출되면 재호출되는?\r\n   * 그렇다고 치기에는 변수값이 변경되면 다른것들도 전부 변경(다른 메소드들도 전부 동작함)\r\n   * -> 강사님 얘기는 v-model을 사용하여 데이터 바인딩을 해서 그런다고하심. / v-model 말고 다른 상황 테스트?\r\n   * -> MethodVSWatch3 설명 확인하기\r\n   */\r\n  computed: {\r\n    fullName() {\r\n      console.log(\"Computed Function 호출\");\r\n      return this.firstName + this.lastName;\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n\r\n<style scoped>\r\n</style>"],"mappings":";;6EACEA,mBAAA,CAAyC;IAAlCC,IAAI,EAAC,MAAM;+DAAUC,KAAA,CAAAC,SAAS,GAAAC,MAAA;iDAATF,KAAA,CAAAC,SAAS,E,GACrCH,mBAAA,CAGM,cAFJA,mBAAA,CAAmC,YAA/B,cAAY,GAAAK,gBAAA,CAAGC,QAAA,CAAAC,QAAQ,kBAC3BP,mBAAA,CAAwC,YAApC,cAAY,GAAAK,gBAAA,CAAGC,QAAA,CAAAE,WAAW,mB"},"metadata":{},"sourceType":"module","externalDependencies":[]}