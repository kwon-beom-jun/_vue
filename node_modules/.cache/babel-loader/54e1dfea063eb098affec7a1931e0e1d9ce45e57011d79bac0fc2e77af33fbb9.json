{"ast":null,"code":"import { createVNode as _createVNode, resolveComponent as _resolveComponent, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  id: \"app\"\n};\nconst _hoisted_2 = {\n  class: \"mt-5\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_router_view = _resolveComponent(\"router-view\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode($setup[\"MainHeader\"]), _createElementVNode(\"div\", _hoisted_2, [_createVNode(_component_router_view)])]);\n}","map":{"version":3,"names":["id","class","_createElementBlock","_hoisted_1","_createVNode","$setup","_createElementVNode","_hoisted_2","_component_router_view"],"sources":["C:\\Users\\qjawn\\Desktop\\vue\\academy-study\\vue-hello\\src\\App.vue"],"sourcesContent":["<template>\n  <div id=\"app\">\n    <main-header></main-header>\n    <div class=\"mt-5\">\n      <router-view />\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport MainHeader from '@/components/MainHeader.vue'\nimport { useRouter } from 'vue-router'\n\nconst router = useRouter()\nlet children = []\nrouter.options.routes.forEach((route, index) => {\n  console.log(route.path + ':' + index)\n\n  if (route && Array.isArray(route.children)) {\n    children = route.children\n  } else if (route) {\n    children = []\n  }\n\n  children.forEach((child) => {\n    console.log(child.path)\n  })\n})\n</script>\n\n­­­<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n}\n\nnav {\n  padding: 30px;\n}\n\nnav a {\n  font-weight: bold;\n  color: #2c3e50;\n}\n\nnav a.router-link-exact-active {\n  color: #42b983;\n}\n</style>\n"],"mappings":";;EACOA,EAAE,EAAC;AAAK;;EAENC,KAAK,EAAC;AAAM;;;uBAFnBC,mBAAA,CAKM,OALNC,UAKM,GAJJC,YAAA,CAA2BC,MAAA,iBAC3BC,mBAAA,CAEM,OAFNC,UAEM,GADJH,YAAA,CAAeI,sBAAA,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}